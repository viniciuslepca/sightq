{"version":3,"sources":["images/thumbs-up.png","images/thumbs-down.png","meetings.js","trends.js","index.js"],"names":["module","exports","thumbsUpImage","require","thumbsDownImage","MeetingsPage","props","setDisplayDetailedMeeting","id","setState","displayDetailedMeeting","getMeetings","a","url","baseurl","fetch","then","response","json","success","meetings","alert","state","this","map","meeting","key","secondsconverter","titlecase","show","onHide","React","Component","MeetingCard","Card","style","marginBottom","backgroundColor","Body","Container","Row","Col","md","width","height","controls","src","imageUrl","Title","title","Subtitle","className","duration","textAlign","Button","onClick","variant","MeetingCardStats","positiveScores","negativeScores","Object","entries","scores","value","score","name","push","Property","type","imageRef","imageAlt","alt","toFixed","DetailedMeetingView","getMeetingDetail","prevProps","prevState","snapshot","Modal","size","centered","Header","closeButton","start_time","participants","join","properties","lowest_participants","DetailedMeetingPlots","engagement","data","i","length","x","y","Number","margin","TrendsPage","renderTrendsBody","Trends","TrendPlot","getDataFromServer","trends","App","secondsToHms","d","h","Math","floor","m","s","titleCase","str","toLowerCase","replace","split","word","toUpperCase","setActivePage","page","activePage","renderActivePage","pages","MEETINGS_PAGE","baseUrl","TRENDS_PAGE","userName","Navbar","bg","Brand","href","Nav","defaultActiveKey","onSelect","selectedKey","keys","pageName","Link","eventKey","Toggle","Collapse","Text","ReactDOM","render","document","getElementById"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,4OCSrCC,EAAgBC,EAAQ,KACxBC,EAAkBD,EAAQ,K,IAMXE,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,0BAA4B,SAACC,GACzB,EAAKC,SAAS,CAACC,uBAAwBF,KATxB,EAYnBG,YAZmB,sBAYL,8BAAAC,EAAA,6DACJC,EAAM,EAAKP,MAAMQ,QAAU,YADvB,SAEaC,MAAMF,GAAKG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFlD,QAEJD,EAFI,QAGGE,QACT,EAAKV,SAAS,CAACW,SAAUH,EAASG,WAElCC,MAAM,kDANA,2CAVV,EAAKC,MAAQ,CACTF,SAAU,GACVV,uBAAwB,MAJb,E,gEAuBfa,KAAKZ,gB,+BAGC,IAAD,OACL,OACI,yBAAKH,GAAG,iBACHe,KAAKD,MAAMF,SAASI,KAAI,SAAAC,GAAO,OAAI,kBAAC,EAAD,CAAaC,IAAKD,EAAQjB,GACbiB,QAASA,EACTE,iBAAkB,EAAKrB,MAAMqB,iBAC7BC,UAAW,EAAKtB,MAAMsB,UACtBrB,0BAA2B,EAAKA,+BACjF,kBAAC,EAAD,CACIsB,KAA4C,OAAtCN,KAAKD,MAAMZ,uBACjBF,GAAIe,KAAKD,MAAMZ,uBACfkB,UAAWL,KAAKjB,MAAMsB,UACtBd,QAASS,KAAKjB,MAAMQ,QACpBa,iBAAkBJ,KAAKjB,MAAMqB,iBAC7BG,OAAQ,kBAAM,EAAKvB,0BAA0B,c,GAzCvBwB,IAAMC,WAgD1CC,E,uKACQ,IAAD,OACCR,EAAUF,KAAKjB,MAAMmB,QAC3B,OACI,kBAACS,EAAA,EAAD,CAAMC,MAAO,CAACC,aAAc,OAAQC,gBAAiB,YACjD,kBAACH,EAAA,EAAKI,KAAN,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,QACJ,2BAAOC,MAAM,MAAMC,OAAO,MAAMC,UAAQ,GACpC,4BAAQC,IAAKrB,EAAQsB,aAG7B,kBAACN,EAAA,EAAD,KACI,kBAACP,EAAA,EAAKc,MAAN,KAAavB,EAAQwB,OACrB,6BACI,kBAACf,EAAA,EAAKgB,SAAN,CAAeC,UAAU,mBAAzB,aACe5B,KAAKjB,MAAMqB,iBAAiBF,EAAQ2B,WAEnD,kBAAC,EAAD,CAAkB3B,QAASA,EAASG,UAAWL,KAAKjB,MAAMsB,eAItE,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,yBAAKN,MAAO,CAACkB,UAAW,UACpB,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKjD,MAAMC,0BAA0BkB,EAAQjB,KAC5DgD,QAAQ,WADhB,uB,GA1BVzB,IAAMC,WAsC1ByB,E,uKAKE,IAJM,IAAD,OAEDC,EAAiB,GACjBC,EAAiB,GACrB,MAA2BC,OAAOC,QAAQtC,KAAKjB,MAAMmB,QAAQqC,QAA7D,eAAsE,CAAC,IAAD,sBAA1DpC,EAA0D,KAArDqC,EAAqD,KAC5DC,EAAQ,CACVC,KAAMvC,EACNqC,MAAOA,GAGPA,GATO,GAUPL,EAAeQ,KAAKF,GAEpBL,EAAeO,KAAKF,GAI5B,OACI,kBAAC9B,EAAA,EAAKI,KAAN,KACKoB,EAAelC,KAAI,SAAAwC,GAAK,OAAI,kBAACG,EAAD,CAAUC,KAAK,WAAWxC,UAAW,EAAKtB,MAAMsB,UACtCF,IAAKsC,EAAMC,KAAMD,MAAOA,OAC9DL,EAAenC,KAAI,SAAAwC,GAAK,OAAI,kBAACG,EAAD,CAAUC,KAAK,WAAWxC,UAAW,EAAKtB,MAAMsB,UACtCF,IAAKsC,EAAMC,KAAMD,MAAOA,Y,GAvBhDjC,IAAMC,WA6BrC,SAASmC,EAAS7D,GACd,IAAI+D,EAA0B,aAAf/D,EAAM8D,KAAsBlE,EAAgBE,EACvDkE,EAA0B,aAAfhE,EAAM8D,KAAsB,iBAAmB,iBAE9D,OACI,kBAAC7B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,QAAO,yBAAKP,MAAO,CAACQ,MAAO,OAAQC,OAAQ,QAASE,IAAKuB,EAAUE,IAAKD,KAChF,kBAAC7B,EAAA,EAAD,CAAKN,MAAO,CAACkB,UAAW,SAAU/C,EAAMsB,UAAUtB,EAAM0D,MAAMC,MAA9D,MA9HK,IA8HmF3D,EAAM0D,MAAMD,OA9H1FS,QAAQ,GAAK,O,IAoIjCC,E,kDACF,WAAYnE,GAAQ,IAAD,8BACf,cAAMA,IAMVoE,iBAPmB,sBAOA,8BAAA9D,EAAA,6DACTC,EAAM,EAAKP,MAAMQ,QAAU,aAAe,EAAKR,MAAME,GAD5C,SAEQO,MAAMF,GAAKG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAF7C,QAETD,EAFS,QAGFE,QACT,EAAKV,SAAS,CAACgB,QAASR,EAASQ,UAEjCJ,MAAM,yBANK,2CALf,EAAKC,MAAQ,CACTG,QAAS,MAHE,E,+DAiBAkD,EAAWC,EAAWC,GACjCF,EAAUnE,KAAOe,KAAKjB,MAAME,KACN,OAAlBe,KAAKjB,MAAME,GACXe,KAAKmD,mBAELnD,KAAKd,SAAS,CAACgB,QAAS,U,+BAOhC,GAAW,OADAF,KAAKjB,MAAME,IACoB,OAAvBe,KAAKD,MAAMG,QAAkB,OAAO,KAEvD,IAAMA,EAAUF,KAAKD,MAAMG,QAC3B,OACI,kBAACqD,EAAA,EAAD,CACIjD,KAAMN,KAAKjB,MAAMuB,KACjBC,OAAQP,KAAKjB,MAAMwB,OACnBiD,KAAK,KACLC,UAAQ,GACR,yBAAK7C,MAAO,CAACE,gBAAiB,YAC1B,kBAACyC,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACrB,kBAACJ,EAAA,EAAM9B,MAAP,KACKvB,EAAQwB,QAGjB,kBAAC6B,EAAA,EAAMxC,KAAP,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKL,MAAO,CAACC,aAAc,SACvB,kBAACK,EAAA,EAAD,KACI,yBAAKN,MAAO,CAACkB,UAAW,WACpB,oDAFR,sBAIwB5B,EAAQ0D,WAAW,6BAJ3C,aAKe5D,KAAKjB,MAAMqB,iBAAiBF,EAAQ2B,UAAU,6BAL7D,iBAMmB3B,EAAQ2D,aAAaC,KAAK,MAAM,6BANnD,8BAOgC5D,EAAQ6D,WAAWC,oBAAoBF,KAAK,MAAM,8BAElF,kBAAC5C,EAAA,EAAD,KACI,yBAAKN,MAAO,CAACkB,UAAW,WACpB,sCACA,kBAAC,EAAD,CAAkBzB,UAAWL,KAAKjB,MAAMsB,UAAWH,QAASF,KAAKD,MAAMG,aAInF,kBAACe,EAAA,EAAD,KACI,kBAACgD,EAAD,CAAsB/D,QAASF,KAAKD,MAAMG,mB,GAjExCM,IAAMC,WA4ExC,SAASwD,EAAqBlF,GAG1B,IAFA,IAAMmF,EAAanF,EAAMmB,QAAQ6D,WAAWG,WACxCC,EAAO,GACFC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IACnCD,EAAKxB,KAAK,CACN2B,EAAGF,EACHG,GAAI,IAAMC,OAAON,EAAWE,KAAKnB,QAAQ,KAGjD,OACI,kBAACjC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKN,MAAO,CAAC6D,OAAQ,UAAWtD,GAAG,QAC/B,kBAACR,EAAA,EAAD,KACI,yBAAKC,MAAO,CAACkB,UAAW,WACpB,kEAEJ,kBAAC,IAAD,CAAQJ,MAAM,OAAOL,OAAQ,IAAKD,MAAO,KACrC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAY+C,KAAMA,S,ICzOzBO,E,kDACjB,WAAY3F,GAAQ,IAAD,8BACf,cAAMA,IAQVK,YATmB,sBASL,8BAAAC,EAAA,6DACJC,EAAM,EAAKP,MAAMQ,QAAU,YADvB,SAEaC,MAAMF,GAAKG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFlD,QAEJD,EAFI,QAGGE,QACT,EAAKV,SAAS,CAACW,SAAUH,EAASG,WAElCC,MAAM,kDANA,2CATK,EAuBnB6E,iBAAmB,WACf,OAAI,EAAK5E,MAAMF,SAASwE,OAAS,EACtB,yBAAKzD,MAAO,CAACkB,UAAW,WAC3B,4FAGD,kBAAC,EAAD,CAAQvC,QAAS,EAAKR,MAAMQ,QAASc,UAAW,EAAKtB,MAAMsB,UACnDkC,OAAQ,EAAKxC,MAAMwC,OAAQwB,WAAY,EAAKhE,MAAMgE,cA5BjE,EAAKhE,MAAQ,CACTF,SAAU,GACV0C,OAAQ,CAAC,sBAAuB,mBAAoB,WACpDwB,WAAY,CAAC,0CALF,E,gEAoBf/D,KAAKZ,gB,+BAcL,OACI,yBAAKH,GAAG,eACHe,KAAK2E,wB,GArCkBnE,IAAMC,WA2CxCmE,E,uKACQ,IAAD,OACL,OACI,kBAAC5D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACKjB,KAAKjB,MAAMwD,OAAOtC,KAAI,SAAAwC,GAAK,OAAI,kBAAC,EAAD,CAAWlD,QAAS,EAAKR,MAAMQ,QAASY,IAAKsC,EAClCpC,UAAW,EAAKtB,MAAMsB,UAAWoC,MAAOA,a,GANlFjC,IAAMC,WAarBoE,E,kDACF,WAAY9F,GAAQ,IAAD,8BACf,cAAMA,IAMV+F,kBAPmB,sBAOC,8BAAAzF,EAAA,6DACVC,EAAM,EAAKP,MAAMQ,QAAU,WAAa,EAAKR,MAAM0D,MADzC,SAEOjD,MAAMF,GAAKG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAF5C,OAEVD,EAFU,OAGhB,EAAKR,SAAS,CAACiF,KAAMzE,EAASqF,SAHd,2CALhB,EAAKhF,MAAQ,CACToE,KAAM,MAHK,E,gEAefnE,KAAK8E,sB,+BAIL,GAAwB,OAApB9E,KAAKD,MAAMoE,KAAe,OAAO,KAErC,IAAIA,EAAO,GACX,IAAK,IAAIC,KAAKpE,KAAKD,MAAMoE,KACrBA,EAAKxB,KAAK,CACN2B,EAAGF,EACHG,EAAGvE,KAAKD,MAAMoE,KAAKC,GAAG5B,QAI9B,OACI,kBAACtB,EAAA,EAAD,CAAKC,GAAG,QACJ,kBAACR,EAAA,EAAD,CAAMC,MAAO,CAACE,gBAAiB,UAAW2D,OAAQ,SAC9C,kBAAC9D,EAAA,EAAKI,KAAN,KACI,kBAACJ,EAAA,EAAKc,MAAN,KAAazB,KAAKjB,MAAMsB,UAAUL,KAAKjB,MAAM0D,QAC7C,kBAAC,IAAD,CAAQpB,OAAQ,IAAKD,MAAO,KACxB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAY+C,KAAMA,Y,GAxCtB3D,IAAMC,WCnDxBuE,G,uEACF,WAAYjG,GAAQ,IAAD,uBACf,cAAMA,IAgBVkG,aAAe,SAAAC,GACXA,EAAIV,OAAOU,GACX,IAAMC,EAAIC,KAAKC,MAAMH,EAAI,MACnBI,EAAIF,KAAKC,MAAMH,EAAI,KAAO,IAC1BK,EAAIH,KAAKC,MAAMH,EAAI,KAAO,IAKhC,OAHiBC,EAAI,EAAIA,EAAI,OAAS,KACrBG,EAAI,EAAIA,EAAI,SAAW,KACvBC,EAAI,EAAIA,EAAI,KAAO,KAzBrB,EA6BnBC,UAAY,SAACC,GACT,OAAOA,EAAIC,cAAcC,QAAQ,IAAK,KAAKC,MAAM,KAAK3F,KAAI,SAAS4F,GAC/D,OAAOA,EAAKF,QAAQE,EAAK,GAAIA,EAAK,GAAGC,kBACtChC,KAAK,MAhCO,EAmCnBiC,cAAgB,SAACC,GACb,EAAK9G,SAAS,CAAC+G,WAAYD,KApCZ,EAuCnBE,iBAAmB,WACf,OAAQ,EAAKnG,MAAMkG,YACf,KAAK,EAAKlG,MAAMoG,MAAMC,cAClB,OAAO,kBAAC,EAAD,CAAc/F,UAAW,EAAKmF,UAAWjG,QAAS,EAAKQ,MAAMsG,QAASjG,iBAAkB,EAAK6E,eACxG,KAAK,EAAKlF,MAAMoG,MAAMG,YAClB,OAAO,kBAAC,EAAD,CAAYjG,UAAW,EAAKmF,UAAWjG,QAAS,EAAKQ,MAAMsG,QAASjG,iBAAkB,EAAK6E,eACtG,QACI,OAAO,OA3Cf,IAAMkB,EAAQ,CACV,cAAiB,WACjB,YAAe,UALJ,OAQf,EAAKpG,MAAQ,CACTwG,SAAU,mBACVN,WAAYE,EAAMC,cAClBD,MAAOA,EACPE,QAAS,iCAZE,E,qDAmDf,OACI,6BACI,kBAAC3C,EAAD,CAAQyC,MAAOnG,KAAKD,MAAMoG,MAAOI,SAAUvG,KAAKD,MAAMwG,SAAUR,cAAe/F,KAAK+F,gBACnF/F,KAAKkG,wB,GAvDJ1F,IAAMC,YA6DxB,SAASiD,EAAO3E,GACZ,OACI,kBAACyH,EAAA,EAAD,CAAQC,GAAG,QAAQxE,QAAQ,SACvB,kBAACuE,EAAA,EAAOE,MAAR,CAAcC,KAAK,SAAnB,UACA,kBAACC,EAAA,EAAD,CAAKhF,UAAU,UAAUiF,iBAAkB9H,EAAMoH,MAAMC,cAClDU,SAAU,SAACC,GAAD,OAAiBhI,EAAMgH,cAAcgB,KAC/C1E,OAAO2E,KAAKjI,EAAMoH,OAAOlG,KAAI,SAAAgH,GAC1B,IAAMjB,EAAOjH,EAAMoH,MAAMc,GACzB,OAAO,kBAACL,EAAA,EAAIM,KAAL,CAAU/G,IAAK6F,EAAMmB,SAAUnB,GAAOA,OAGrD,kBAACQ,EAAA,EAAOY,OAAR,MACA,kBAACZ,EAAA,EAAOa,SAAR,CAAiBzF,UAAU,uBACvB,kBAAC4E,EAAA,EAAOc,KAAR,sBACkB,uBAAGX,KAAK,UAAU5H,EAAMwH,aAO1DgB,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1014c022.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thumbs-up.752215e4.png\";","module.exports = __webpack_public_path__ + \"static/media/thumbs-down.72fff281.png\";","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {XYPlot, LineSeries, YAxis} from 'react-vis';\r\n// Images\r\nconst thumbsUpImage = require('./images/thumbs-up.png');\r\nconst thumbsDownImage = require('./images/thumbs-down.png');\r\n\r\nfunction formatPercentage(number) {\r\n    return (number * 100).toFixed(0) + \"%\";\r\n}\r\n\r\nexport default class MeetingsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            meetings: [],\r\n            displayDetailedMeeting: null // Hold ID of meeting to be displayed, null otherwise\r\n        }\r\n    }\r\n\r\n    setDisplayDetailedMeeting = (id) => {\r\n        this.setState({displayDetailedMeeting: id})\r\n    };\r\n\r\n    getMeetings = async () => {\r\n        const url = this.props.baseurl + \"/meetings\";\r\n        const response = await fetch(url).then(response => response.json());\r\n        if (response.success) {\r\n            this.setState({meetings: response.meetings});\r\n        } else {\r\n            alert('Something went wrong when extracting meetings!')\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getMeetings();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"meetings-body\">\r\n                {this.state.meetings.map(meeting => <MeetingCard key={meeting.id}\r\n                                                                 meeting={meeting}\r\n                                                                 secondsconverter={this.props.secondsconverter}\r\n                                                                 titlecase={this.props.titlecase}\r\n                                                                 setDisplayDetailedMeeting={this.setDisplayDetailedMeeting}/>)}\r\n                <DetailedMeetingView\r\n                    show={this.state.displayDetailedMeeting !== null}\r\n                    id={this.state.displayDetailedMeeting}\r\n                    titlecase={this.props.titlecase}\r\n                    baseurl={this.props.baseurl}\r\n                    secondsconverter={this.props.secondsconverter}\r\n                    onHide={() => this.setDisplayDetailedMeeting(null)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass MeetingCard extends React.Component {\r\n    render() {\r\n        const meeting = this.props.meeting;\r\n        return (\r\n            <Card style={{marginBottom: \"10px\", backgroundColor: \"#f8f9fa\"}}>\r\n                <Card.Body>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md=\"auto\">\r\n                                <video width=\"320\" height=\"240\" controls>\r\n                                    <source src={meeting.imageUrl}/>\r\n                                </video>\r\n                            </Col>\r\n                            <Col>\r\n                                <Card.Title>{meeting.title}</Card.Title>\r\n                                <div>\r\n                                    <Card.Subtitle className=\"mb-2 text-muted\">\r\n                                        Duration: {this.props.secondsconverter(meeting.duration)}\r\n                                    </Card.Subtitle>\r\n                                    <MeetingCardStats meeting={meeting} titlecase={this.props.titlecase}/>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <div style={{textAlign: \"right\"}}>\r\n                                    <Button onClick={() => this.props.setDisplayDetailedMeeting(meeting.id)}\r\n                                            variant=\"primary\">+ Details</Button>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nclass MeetingCardStats extends React.Component {\r\n    render() {\r\n        const cutOff = 0.7;\r\n        let positiveScores = [];\r\n        let negativeScores = [];\r\n        for (const [key, value] of Object.entries(this.props.meeting.scores)) {\r\n            const score = {\r\n                name: key,\r\n                value: value\r\n            };\r\n\r\n            if (value >= cutOff) {\r\n                positiveScores.push(score)\r\n            } else {\r\n                negativeScores.push(score)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Card.Body>\r\n                {positiveScores.map(score => <Property type=\"positive\" titlecase={this.props.titlecase}\r\n                                                       key={score.name} score={score}/>)}\r\n                {negativeScores.map(score => <Property type=\"negative\" titlecase={this.props.titlecase}\r\n                                                       key={score.name} score={score}/>)}\r\n            </Card.Body>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Property(props) {\r\n    let imageRef = props.type === \"positive\" ? thumbsUpImage : thumbsDownImage;\r\n    let imageAlt = props.type === \"positive\" ? \"Positive score\" : \"Negative score\";\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md=\"auto\"><img style={{width: \"20px\", height: \"20px\"}} src={imageRef} alt={imageAlt}/></Col>\r\n                <Col style={{textAlign: \"left\"}}>{props.titlecase(props.score.name)}: {formatPercentage(props.score.value)}</Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nclass DetailedMeetingView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            meeting: null\r\n        }\r\n    }\r\n\r\n    getMeetingDetail = async () => {\r\n        const url = this.props.baseurl + \"/meetings/\" + this.props.id;\r\n        const response = await fetch(url).then(response => response.json());\r\n        if (response.success) {\r\n            this.setState({meeting: response.meeting})\r\n        } else {\r\n            alert(\"Something went wrong!\")\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.id !== this.props.id) {\r\n            if (this.props.id !== null) {\r\n                this.getMeetingDetail();\r\n            } else {\r\n                this.setState({meeting: null})\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const id = this.props.id;\r\n        if (id === null || this.state.meeting === null) return null;\r\n\r\n        const meeting = this.state.meeting;\r\n        return (\r\n            <Modal\r\n                show={this.props.show}\r\n                onHide={this.props.onHide}\r\n                size=\"xl\"\r\n                centered>\r\n                <div style={{backgroundColor: \"#f8f9fa\"}}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>\r\n                            {meeting.title}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Container>\r\n                            <Row style={{marginBottom: \"10px\"}}>\r\n                                <Col>\r\n                                    <div style={{textAlign: \"center\"}}>\r\n                                        <h6>General Information</h6>\r\n                                    </div>\r\n                                    Meeting Date/Time: {meeting.start_time}<br/>\r\n                                    Duration: {this.props.secondsconverter(meeting.duration)}<br/>\r\n                                    Participants: {meeting.participants.join(\", \")}<br/>\r\n                                    Least Active Participants: {meeting.properties.lowest_participants.join(\", \")}<br/>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div style={{textAlign: \"center\"}}>\r\n                                        <h6>Scores</h6>\r\n                                        <MeetingCardStats titlecase={this.props.titlecase} meeting={this.state.meeting}/>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <DetailedMeetingPlots meeting={this.state.meeting}/>\r\n                            </Row>\r\n                        </Container>\r\n                    </Modal.Body>\r\n                </div>\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nfunction DetailedMeetingPlots(props) {\r\n    const engagement = props.meeting.properties.engagement;\r\n    let data = [];\r\n    for (let i = 0; i < engagement.length; i++) {\r\n        data.push({\r\n            x: i,\r\n            y: (100 * Number(engagement[i])).toFixed(2)\r\n        })\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col style={{margin: \"0 auto\"}} md=\"auto\">\r\n                    <Card>\r\n                        <div style={{textAlign: \"center\"}}>\r\n                            <h6>Distribution of participation (%)</h6>\r\n                        </div>\r\n                        <XYPlot title=\"test\" height={300} width={600}>\r\n                            <YAxis/>\r\n                            <LineSeries data={data}/>\r\n                        </XYPlot>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {XYPlot, VerticalGridLines, HorizontalGridLines, LineSeries, XAxis, YAxis} from 'react-vis';\r\n\r\nexport default class TrendsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            meetings: [],\r\n            scores: [\"participation_score\", \"engagement_score\", \"silence\"],\r\n            properties: [\"participation, engagement, unanswered\"]\r\n        }\r\n    }\r\n\r\n    getMeetings = async () => {\r\n        const url = this.props.baseurl + \"/meetings\";\r\n        const response = await fetch(url).then(response => response.json());\r\n        if (response.success) {\r\n            this.setState({meetings: response.meetings});\r\n        } else {\r\n            alert('Something went wrong when extracting meetings!')\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getMeetings();\r\n    }\r\n\r\n    renderTrendsBody = () => {\r\n        if (this.state.meetings.length < 2) {\r\n            return <div style={{textAlign: \"center\"}}>\r\n                <h5>Please record at least 2 meetings so we can display trends.</h5>\r\n            </div>\r\n        }\r\n        return <Trends baseurl={this.props.baseurl} titlecase={this.props.titlecase}\r\n                       scores={this.state.scores} properties={this.state.properties}/>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"trends-body\">\r\n                {this.renderTrendsBody()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Trends extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    {this.props.scores.map(score => <TrendPlot baseurl={this.props.baseurl} key={score}\r\n                                                               titlecase={this.props.titlecase} score={score}/>)}\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nclass TrendPlot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null\r\n        }\r\n    }\r\n\r\n    getDataFromServer = async () => {\r\n        const url = this.props.baseurl + \"/trends/\" + this.props.score;\r\n        const response = await fetch(url).then(response => response.json());\r\n        this.setState({data: response.trends})\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.getDataFromServer();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.data === null) return null;\r\n\r\n        let data = [];\r\n        for (let i in this.state.data) {\r\n            data.push({\r\n                x: i,\r\n                y: this.state.data[i].value\r\n            })\r\n        }\r\n\r\n        return (\r\n            <Col md=\"auto\">\r\n                <Card style={{backgroundColor: \"#f8f9fa\", margin: \"10px\"}}>\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.titlecase(this.props.score)}</Card.Title>\r\n                        <XYPlot height={250} width={250}>\r\n                            <VerticalGridLines/>\r\n                            <HorizontalGridLines/>\r\n                            <XAxis/>\r\n                            <YAxis/>\r\n                            <LineSeries data={data}/>\r\n                        </XYPlot>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nimport MeetingsPage from './meetings';\r\nimport TrendsPage from \"./trends\";\r\n\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-vis/dist/style.css';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const pages = {\r\n            'MEETINGS_PAGE': 'Meetings',\r\n            'TRENDS_PAGE': 'Trends'\r\n       };\r\n\r\n        this.state = {\r\n            userName: \"Conner Delahanty\",\r\n            activePage: pages.MEETINGS_PAGE,\r\n            pages: pages,\r\n            baseUrl: \"https://sightq.herokuapp.com/\"\r\n        };\r\n    }\r\n\r\n    // Based on https://stackoverflow.com/questions/37096367/how-to-convert-seconds-to-minutes-and-hours-in-javascript\r\n    secondsToHms = d => {\r\n        d = Number(d);\r\n        const h = Math.floor(d / 3600);\r\n        const m = Math.floor(d % 3600 / 60);\r\n        const s = Math.floor(d % 3600 % 60);\r\n\r\n        const hDisplay = h > 0 ? h + \" h, \" : \"\";\r\n        const mDisplay = m > 0 ? m + \" min, \" : \"\";\r\n        const sDisplay = s > 0 ? s + \" s\" : \"\";\r\n        return hDisplay + mDisplay + sDisplay;\r\n    };\r\n\r\n    titleCase = (str) => {\r\n        return str.toLowerCase().replace('_', ' ').split(' ').map(function(word) {\r\n            return word.replace(word[0], word[0].toUpperCase());\r\n        }).join(' ');\r\n    };\r\n\r\n    setActivePage = (page) => {\r\n        this.setState({activePage: page});\r\n    };\r\n\r\n    renderActivePage = () => {\r\n        switch (this.state.activePage) {\r\n            case this.state.pages.MEETINGS_PAGE:\r\n                return <MeetingsPage titlecase={this.titleCase} baseurl={this.state.baseUrl} secondsconverter={this.secondsToHms}/>;\r\n            case this.state.pages.TRENDS_PAGE:\r\n                return <TrendsPage titlecase={this.titleCase} baseurl={this.state.baseUrl} secondsconverter={this.secondsToHms}/>;\r\n            default:\r\n                return null\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header pages={this.state.pages} userName={this.state.userName} setActivePage={this.setActivePage}/>\r\n                {this.renderActivePage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <Navbar bg=\"light\" variant=\"light\">\r\n            <Navbar.Brand href=\"#home\">SightQ</Navbar.Brand>\r\n            <Nav className=\"mr-auto\" defaultActiveKey={props.pages.MEETINGS_PAGE}\r\n                 onSelect={(selectedKey) => props.setActivePage(selectedKey)}>\r\n                {Object.keys(props.pages).map(pageName => {\r\n                    const page = props.pages[pageName];\r\n                    return <Nav.Link key={page} eventKey={page}>{page}</Nav.Link>\r\n                })}\r\n            </Nav>\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    Signed in as: <a href=\"#login\">{props.userName}</a>\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}